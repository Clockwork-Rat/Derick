// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: budget.proto
// Protobuf C++ Version: 6.30.1

#include "budget.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr BudgetSplitRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        want_percent_{0},
        need_percent_{0},
        total_income_{0},
        taxes_{false} {}

template <typename>
PROTOBUF_CONSTEXPR BudgetSplitRequest::BudgetSplitRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(BudgetSplitRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BudgetSplitRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BudgetSplitRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BudgetSplitRequestDefaultTypeInternal() {}
  union {
    BudgetSplitRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BudgetSplitRequestDefaultTypeInternal _BudgetSplitRequest_default_instance_;

inline constexpr BudgetSplit::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        wants_{0},
        needs_{0},
        savings_{0},
        taxes_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BudgetSplit::BudgetSplit(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(BudgetSplit_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BudgetSplitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BudgetSplitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BudgetSplitDefaultTypeInternal() {}
  union {
    BudgetSplit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BudgetSplitDefaultTypeInternal _BudgetSplit_default_instance_;
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_budget_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_budget_2eproto = nullptr;
const ::uint32_t
    TableStruct_budget_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::BudgetSplitRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::BudgetSplitRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::BudgetSplitRequest, _impl_.want_percent_),
        PROTOBUF_FIELD_OFFSET(::BudgetSplitRequest, _impl_.need_percent_),
        PROTOBUF_FIELD_OFFSET(::BudgetSplitRequest, _impl_.total_income_),
        PROTOBUF_FIELD_OFFSET(::BudgetSplitRequest, _impl_.taxes_),
        0,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::BudgetSplit, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::BudgetSplit, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::BudgetSplit, _impl_.wants_),
        PROTOBUF_FIELD_OFFSET(::BudgetSplit, _impl_.needs_),
        PROTOBUF_FIELD_OFFSET(::BudgetSplit, _impl_.savings_),
        PROTOBUF_FIELD_OFFSET(::BudgetSplit, _impl_.taxes_),
        0,
        1,
        2,
        3,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 12, -1, sizeof(::BudgetSplitRequest)},
        {16, 28, -1, sizeof(::BudgetSplit)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::_BudgetSplitRequest_default_instance_._instance,
    &::_BudgetSplit_default_instance_._instance,
};
const char descriptor_table_protodef_budget_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014budget.proto\"e\n\022BudgetSplitRequest\022\024\n\014"
    "want_percent\030\001 \001(\002\022\024\n\014need_percent\030\002 \001(\002"
    "\022\024\n\014total_income\030\003 \001(\001\022\r\n\005taxes\030\004 \001(\010\"K\n"
    "\013BudgetSplit\022\r\n\005wants\030\001 \001(\002\022\r\n\005needs\030\002 \001"
    "(\002\022\017\n\007savings\030\003 \001(\002\022\r\n\005taxes\030\004 \001(\0022C\n\nBu"
    "dgetInfo\0225\n\016GetBudgetSplit\022\023.BudgetSplit"
    "Request\032\014.BudgetSplit\"\000b\006proto3"
};
static ::absl::once_flag descriptor_table_budget_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_budget_2eproto = {
    false,
    false,
    271,
    descriptor_table_protodef_budget_2eproto,
    "budget.proto",
    &descriptor_table_budget_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_budget_2eproto::offsets,
    file_level_enum_descriptors_budget_2eproto,
    file_level_service_descriptors_budget_2eproto,
};
// ===================================================================

class BudgetSplitRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BudgetSplitRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BudgetSplitRequest, _impl_._has_bits_);
};

BudgetSplitRequest::BudgetSplitRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BudgetSplitRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:BudgetSplitRequest)
}
BudgetSplitRequest::BudgetSplitRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BudgetSplitRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BudgetSplitRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE BudgetSplitRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void BudgetSplitRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, want_percent_),
           0,
           offsetof(Impl_, taxes_) -
               offsetof(Impl_, want_percent_) +
               sizeof(Impl_::taxes_));
}
BudgetSplitRequest::~BudgetSplitRequest() {
  // @@protoc_insertion_point(destructor:BudgetSplitRequest)
  SharedDtor(*this);
}
inline void BudgetSplitRequest::SharedDtor(MessageLite& self) {
  BudgetSplitRequest& this_ = static_cast<BudgetSplitRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL BudgetSplitRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BudgetSplitRequest(arena);
}
constexpr auto BudgetSplitRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BudgetSplitRequest),
                                            alignof(BudgetSplitRequest));
}
constexpr auto BudgetSplitRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BudgetSplitRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BudgetSplitRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BudgetSplitRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BudgetSplitRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<BudgetSplitRequest>(), &BudgetSplitRequest::ByteSizeLong,
              &BudgetSplitRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BudgetSplitRequest, _impl_._cached_size_),
          false,
      },
      &BudgetSplitRequest::kDescriptorMethods,
      &descriptor_table_budget_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        BudgetSplitRequest_class_data_ =
            BudgetSplitRequest::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL BudgetSplitRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BudgetSplitRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BudgetSplitRequest_class_data_.tc_table);
  return BudgetSplitRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
BudgetSplitRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BudgetSplitRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    BudgetSplitRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::BudgetSplitRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool taxes = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(BudgetSplitRequest, _impl_.taxes_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(BudgetSplitRequest, _impl_.taxes_)}},
    // float want_percent = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(BudgetSplitRequest, _impl_.want_percent_)}},
    // float need_percent = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(BudgetSplitRequest, _impl_.need_percent_)}},
    // double total_income = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(BudgetSplitRequest, _impl_.total_income_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float want_percent = 1;
    {PROTOBUF_FIELD_OFFSET(BudgetSplitRequest, _impl_.want_percent_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float need_percent = 2;
    {PROTOBUF_FIELD_OFFSET(BudgetSplitRequest, _impl_.need_percent_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // double total_income = 3;
    {PROTOBUF_FIELD_OFFSET(BudgetSplitRequest, _impl_.total_income_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // bool taxes = 4;
    {PROTOBUF_FIELD_OFFSET(BudgetSplitRequest, _impl_.taxes_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void BudgetSplitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:BudgetSplitRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    ::memset(&_impl_.want_percent_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.taxes_) -
        reinterpret_cast<char*>(&_impl_.want_percent_)) + sizeof(_impl_.taxes_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL BudgetSplitRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const BudgetSplitRequest& this_ = static_cast<const BudgetSplitRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL BudgetSplitRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const BudgetSplitRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:BudgetSplitRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float want_percent = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_want_percent()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          1, this_._internal_want_percent(), target);
    }
  }

  // float need_percent = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_need_percent()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          2, this_._internal_need_percent(), target);
    }
  }

  // double total_income = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_total_income()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_total_income(), target);
    }
  }

  // bool taxes = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_taxes() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_taxes(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BudgetSplitRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t BudgetSplitRequest::ByteSizeLong(const MessageLite& base) {
  const BudgetSplitRequest& this_ = static_cast<const BudgetSplitRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t BudgetSplitRequest::ByteSizeLong() const {
  const BudgetSplitRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:BudgetSplitRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // float want_percent = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_want_percent()) != 0) {
        total_size += 5;
      }
    }
    // float need_percent = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_need_percent()) != 0) {
        total_size += 5;
      }
    }
    // double total_income = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_total_income()) != 0) {
        total_size += 9;
      }
    }
    // bool taxes = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_taxes() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void BudgetSplitRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BudgetSplitRequest*>(&to_msg);
  auto& from = static_cast<const BudgetSplitRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:BudgetSplitRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_want_percent()) != 0) {
        _this->_impl_.want_percent_ = from._impl_.want_percent_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_need_percent()) != 0) {
        _this->_impl_.need_percent_ = from._impl_.need_percent_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_total_income()) != 0) {
        _this->_impl_.total_income_ = from._impl_.total_income_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_taxes() != 0) {
        _this->_impl_.taxes_ = from._impl_.taxes_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BudgetSplitRequest::CopyFrom(const BudgetSplitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BudgetSplitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BudgetSplitRequest::InternalSwap(BudgetSplitRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BudgetSplitRequest, _impl_.taxes_)
      + sizeof(BudgetSplitRequest::_impl_.taxes_)
      - PROTOBUF_FIELD_OFFSET(BudgetSplitRequest, _impl_.want_percent_)>(
          reinterpret_cast<char*>(&_impl_.want_percent_),
          reinterpret_cast<char*>(&other->_impl_.want_percent_));
}

::google::protobuf::Metadata BudgetSplitRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BudgetSplit::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BudgetSplit>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BudgetSplit, _impl_._has_bits_);
};

BudgetSplit::BudgetSplit(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BudgetSplit_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:BudgetSplit)
}
BudgetSplit::BudgetSplit(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BudgetSplit& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BudgetSplit_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE BudgetSplit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void BudgetSplit::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, wants_),
           0,
           offsetof(Impl_, taxes_) -
               offsetof(Impl_, wants_) +
               sizeof(Impl_::taxes_));
}
BudgetSplit::~BudgetSplit() {
  // @@protoc_insertion_point(destructor:BudgetSplit)
  SharedDtor(*this);
}
inline void BudgetSplit::SharedDtor(MessageLite& self) {
  BudgetSplit& this_ = static_cast<BudgetSplit&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL BudgetSplit::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BudgetSplit(arena);
}
constexpr auto BudgetSplit::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BudgetSplit),
                                            alignof(BudgetSplit));
}
constexpr auto BudgetSplit::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BudgetSplit_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BudgetSplit::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BudgetSplit>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BudgetSplit::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<BudgetSplit>(), &BudgetSplit::ByteSizeLong,
              &BudgetSplit::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BudgetSplit, _impl_._cached_size_),
          false,
      },
      &BudgetSplit::kDescriptorMethods,
      &descriptor_table_budget_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        BudgetSplit_class_data_ =
            BudgetSplit::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL BudgetSplit::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BudgetSplit_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BudgetSplit_class_data_.tc_table);
  return BudgetSplit_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
BudgetSplit::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BudgetSplit, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    BudgetSplit_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::BudgetSplit>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float taxes = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(BudgetSplit, _impl_.taxes_)}},
    // float wants = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(BudgetSplit, _impl_.wants_)}},
    // float needs = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(BudgetSplit, _impl_.needs_)}},
    // float savings = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(BudgetSplit, _impl_.savings_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float wants = 1;
    {PROTOBUF_FIELD_OFFSET(BudgetSplit, _impl_.wants_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float needs = 2;
    {PROTOBUF_FIELD_OFFSET(BudgetSplit, _impl_.needs_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float savings = 3;
    {PROTOBUF_FIELD_OFFSET(BudgetSplit, _impl_.savings_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float taxes = 4;
    {PROTOBUF_FIELD_OFFSET(BudgetSplit, _impl_.taxes_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void BudgetSplit::Clear() {
// @@protoc_insertion_point(message_clear_start:BudgetSplit)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    ::memset(&_impl_.wants_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.taxes_) -
        reinterpret_cast<char*>(&_impl_.wants_)) + sizeof(_impl_.taxes_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL BudgetSplit::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const BudgetSplit& this_ = static_cast<const BudgetSplit&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL BudgetSplit::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const BudgetSplit& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:BudgetSplit)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float wants = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_wants()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          1, this_._internal_wants(), target);
    }
  }

  // float needs = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_needs()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          2, this_._internal_needs(), target);
    }
  }

  // float savings = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_savings()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          3, this_._internal_savings(), target);
    }
  }

  // float taxes = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_taxes()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          4, this_._internal_taxes(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BudgetSplit)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t BudgetSplit::ByteSizeLong(const MessageLite& base) {
  const BudgetSplit& this_ = static_cast<const BudgetSplit&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t BudgetSplit::ByteSizeLong() const {
  const BudgetSplit& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:BudgetSplit)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // float wants = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_wants()) != 0) {
        total_size += 5;
      }
    }
    // float needs = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_needs()) != 0) {
        total_size += 5;
      }
    }
    // float savings = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_savings()) != 0) {
        total_size += 5;
      }
    }
    // float taxes = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_taxes()) != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void BudgetSplit::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BudgetSplit*>(&to_msg);
  auto& from = static_cast<const BudgetSplit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:BudgetSplit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_wants()) != 0) {
        _this->_impl_.wants_ = from._impl_.wants_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_needs()) != 0) {
        _this->_impl_.needs_ = from._impl_.needs_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_savings()) != 0) {
        _this->_impl_.savings_ = from._impl_.savings_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_taxes()) != 0) {
        _this->_impl_.taxes_ = from._impl_.taxes_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BudgetSplit::CopyFrom(const BudgetSplit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BudgetSplit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BudgetSplit::InternalSwap(BudgetSplit* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BudgetSplit, _impl_.taxes_)
      + sizeof(BudgetSplit::_impl_.taxes_)
      - PROTOBUF_FIELD_OFFSET(BudgetSplit, _impl_.wants_)>(
          reinterpret_cast<char*>(&_impl_.wants_),
          reinterpret_cast<char*>(&other->_impl_.wants_));
}

::google::protobuf::Metadata BudgetSplit::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_budget_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
